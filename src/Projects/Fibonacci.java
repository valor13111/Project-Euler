package Projects;

/**
 * Project 2 Question:
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms
 * will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * @author Tyler Reed
 * @version 2016.9.15
 */
public class Fibonacci {

    private final int FIRST_FIB = 1;
    private final int SECOND_FIB = 2;
    private final int MAX_VALUE = 4000000;
    private final String FIB = "Fibonacci sum of even numbers";

    private int total;
    private String output = "";

    public Fibonacci() {
        isStartValueEven(FIRST_FIB);
        isStartValueEven(SECOND_FIB);

        output += fib(FIRST_FIB, SECOND_FIB);
    }

    /**
     * Returns the total of all even fibonacci values from given starting numbers less than
     * a certain value, MAX_VALUE.  Recursively adds the total.
     *
     * @param a
     * @param b
     * @return  sum of all even fibonacci numbers
     */
    public int fib(int a, int b) {
        if (a + b < MAX_VALUE) {
            if (isEven(a + b)) {
                total += (a + b);
            }
            fib(b, a + b);
        }

        return total;
    }

    /**
     * Returns true if value is even, false if not.
     *
     * @param value
     * @return  true or false
     */
    private boolean isEven(int value) {
        if (value % 2 == 0) {
            return true;
        }

        return false;
    }

    /**
     * Checks the starting fibonacci value if it is even or not.
     *
     * @param value
     */
    private void isStartValueEven(int value) {
        if (value % 2 == 0) {
            total += value;
        }
    }

    /**
     * Returns a formatted output.
     *
     * @return  output
     */
    public String print() {
        output = FIB + " [" + FIRST_FIB + ", " + SECOND_FIB + "] : "
                + total;

        return output;
    }

}

